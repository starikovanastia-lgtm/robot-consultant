import React, { useState } from 'react';
import './App.css';
import logoImage from '/images/logo_exact.png';
import robotImage from '/images/robot_exact.png';

function App() {
  const [currentView, setCurrentView] = useState('consultant');
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [chatActive, setChatActive] = useState(false);
  const [messages, setMessages] = useState([]);
  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);
  const [userAnswers, setUserAnswers] = useState({});
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const [selectedOption, setSelectedOption] = useState(null);

  const questions = [
    {
      id: 'occasion',
      text: '–î–ª—è –∫–∞–∫–æ–≥–æ —Å–ª—É—á–∞—è –≤–∞–º –Ω—É–∂–µ–Ω —Ç–æ—Ä—Ç?',
      options: ['üéâ –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è', 'üéä –Æ–±–∏–ª–µ–π', 'üíï –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —É–∂–∏–Ω', 'üëî –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤', 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–µ–º–µ–π–Ω—ã–π –ø—Ä–∞–∑–¥–Ω–∏–∫', '‚òï –ß–∞–µ–ø–∏—Ç–∏–µ']
    },
    {
      id: 'sweetness',
      text: '–ö–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å —Å–ª–∞–¥–æ—Å—Ç–∏ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?',
      options: ['–ù–µ –æ—á–µ–Ω—å —Å–ª–∞–¥–∫–∏–π', '–£–º–µ—Ä–µ–Ω–Ω–æ —Å–ª–∞–¥–∫–∏–π', '–û—á–µ–Ω—å —Å–ª–∞–¥–∫–∏–π']
    },
    {
      id: 'size',
      text: '–ö–∞–∫–æ–π —Ä–∞–∑–º–µ—Ä —Ç–æ—Ä—Ç–∞ –≤–∞–º –Ω—É–∂–µ–Ω?',
      options: ['–ú–∞–ª–µ–Ω—å–∫–∏–π (–¥–æ 1 –∫–≥)', '–°—Ä–µ–¥–Ω–∏–π (1-1.5 –∫–≥)', '–ë–æ–ª—å—à–æ–π (–æ—Ç 1.5 –∫–≥)']
    },
    {
      id: 'budget',
      text: '–ö–∞–∫–æ–π —É –≤–∞—Å –±—é–¥–∂–µ—Ç?',
      options: ['–î–æ 1000 ‚ÇΩ', '–û—Ç 1000 ‚ÇΩ']
    },
    {
      id: 'preference',
      text: '–ö–∞–∫–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?',
      options: ['–®–æ–∫–æ–ª–∞–¥', '–ú–µ–¥', '–ö—Ä–µ–º', '–ú—É—Å—Å', '–ù–µ –≤–∞–∂–Ω–æ']
    }
  ];

  const categories = [
    { id: 'all', name: '–í—Å–µ —Ç–æ—Ä—Ç—ã', icon: 'üç∞' },
    { id: 'chocolate', name: '–®–æ–∫–æ–ª–∞–¥–Ω—ã–µ', icon: 'üç´' },
    { id: 'cheesecake', name: '–ß–∏–∑–∫–µ–π–∫–∏', icon: 'üßÄ' },
    { id: 'honey', name: '–ú–µ–¥–æ–≤—ã–µ', icon: 'üçØ' },
    { id: 'classic', name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ', icon: 'üéÇ' },
    { id: 'fruit', name: '–§—Ä—É–∫—Ç–æ–≤—ã–µ', icon: 'üçì' },
    { id: 'mousse', name: '–ú—É—Å—Å–æ–≤—ã–µ', icon: '‚òÅÔ∏è' }
  ];

  const cakes = [
    {
      id: 1,
      name: '–¢–æ—Ä—Ç "–ù–ê–°–õ–ê–ñ–î–ï–ù–ò–ï"',
      description: '–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π —Ç–µ–º–Ω—ã–π —à–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ç–æ—Ä—Ç —Å –≥–ª—è–Ω—Ü–µ–≤–æ–π –≥–ª–∞–∑—É—Ä—å—é',
      price: '629.00 ‚ÇΩ',
      oldPrice: '750.00 ‚ÇΩ',
      weight: '1.0 –∫–≥',
      category: 'chocolate',
      url: 'https://fabrikatortov.com/o/bf7836/',
      image: 'üç´',
      popular: true,
      discount: 16
    },
    {
      id: 2,
      name: '–¢–æ—Ä—Ç "–ö–û–ö–û–°–û–í–´–ô"',
      description: '–ö—Ä—É–≥–ª—ã–π —Ç–æ—Ä—Ç, –ø–æ–∫—Ä—ã—Ç—ã–π –±–µ–ª–æ–π –∫–æ–∫–æ—Å–æ–≤–æ–π —Å—Ç—Ä—É–∂–∫–æ–π',
      price: '879.00 ‚ÇΩ',
      weight: '1.2 –∫–≥',
      category: 'classic',
      url: 'https://fabrikatortov.com/o/6961a0/',
      image: 'ü••'
    },
    {
      id: 3,
      name: '–¢–æ—Ä—Ç "–ß–ò–ó–ö–ï–ô–ö –ù–¨–Æ-–ô–û–†–ö"',
      description: '–ú–Ω–æ–≥–æ—Å–ª–æ–π–Ω—ã–π —á–∏–∑–∫–µ–π–∫ —Å –∫—Ä–∞—Å–Ω—ã–º –∂–µ–ª–µ',
      price: '999.00 ‚ÇΩ',
      weight: '1.3 –∫–≥',
      category: 'cheesecake',
      url: 'https://fabrikatortov.com/o/696185/',
      image: 'üßÄ',
      popular: true
    },
    {
      id: 4,
      name: '–¢–æ—Ä—Ç "–®–û–ö–û–õ–ê–î–ù–´–ô –ú–£–°–°"',
      description: '–¢—Ä–∏ —à–æ–∫–æ–ª–∞–¥–∞ —Å –ø–∞–Ω–¥–∞-—Ä–∏—Å—É–Ω–∫–æ–º',
      price: '1059.00 ‚ÇΩ',
      weight: '1.4 –∫–≥',
      category: 'mousse',
      url: 'https://fabrikatortov.com/o/5f19c8/',
      image: 'üêº'
    },
    {
      id: 5,
      name: '–¢–æ—Ä—Ç "–ú–ï–î–û–í–´–ô"',
      description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–µ–¥–æ–≤—ã–π —Ç–æ—Ä—Ç —Å –º–µ–¥–æ–≤—ã–º–∏ —Å–æ—Ç–∞–º–∏',
      price: '519.00 ‚ÇΩ',
      weight: '1.0 –∫–≥',
      category: 'honey',
      url: 'https://fabrikatortov.com/o/5c4a77/',
      image: 'üçØ'
    },
    {
      id: 6,
      name: '–¢–æ—Ä—Ç "–ù–ê–ü–û–õ–ï–û–ù"',
      description: '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —Å–ª–æ–µ–Ω—ã–π —Ç–æ—Ä—Ç —Å –∑–∞–≤–∞—Ä–Ω—ã–º –∫—Ä–µ–º–æ–º',
      price: '479.00 ‚ÇΩ',
      weight: '1.1 –∫–≥',
      category: 'classic',
      url: 'https://fabrikatortov.com/o/5c9690/',
      image: 'üéÇ'
    },
    {
      id: 7,
      name: '–¢–æ—Ä—Ç "–ë–ê–ù–ê–ù–û–í–´–ô"',
      description: '–° –±–∞–Ω–∞–Ω–∞–º–∏ –∏ —Å–æ–ª–µ–Ω–æ–π –∫–∞—Ä–∞–º–µ–ª—å—é',
      price: '999.00 ‚ÇΩ',
      weight: '1.2 –∫–≥',
      category: 'fruit',
      url: 'https://fabrikatortov.com/o/55de16/',
      image: 'üçå'
    },
    {
      id: 8,
      name: '–¢–æ—Ä—Ç "–ó–õ–ê–ö–û–í–´–ô –ú–£–°–°"',
      description: '–ù–µ–∂–Ω—ã–π –∑–ª–∞–∫–æ–≤—ã–π –º—É—Å—Å–æ–≤—ã–π —Ç–æ—Ä—Ç',
      price: '879.00 ‚ÇΩ',
      weight: '1.1 –∫–≥',
      category: 'mousse',
      url: 'https://fabrikatortov.com/o/5c4a20/',
      image: 'üåæ'
    },
    {
      id: 9,
      name: '–¢–æ—Ä—Ç "–ö–õ–£–ë–ù–ò–ß–ù–´–ô –ú–£–°–°"',
      description: '–Ø—Ä–∫–∏–π –∫–ª—É–±–Ω–∏—á–Ω—ã–π –º—É—Å—Å —Å —Ä–æ–∑–æ–π',
      price: '879.00 ‚ÇΩ',
      weight: '1.1 –∫–≥',
      category: 'mousse',
      url: 'https://fabrikatortov.com/o/5c4a20/',
      image: 'üçì'
    },
    {
      id: 10,
      name: '–¢–æ—Ä—Ç "–î–ï–ù–¨ –ò –ù–û–ß–¨"',
      description: '–®–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ç–æ—Ä—Ç —Å –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º',
      price: '799.00 ‚ÇΩ',
      weight: '1.0 –∫–≥',
      category: 'chocolate',
      url: 'https://fabrikatortov.com/o/5c4a68/',
      image: 'üåô'
    },
    {
      id: 11,
      name: '–¢–æ—Ä—Ç "–ë–†–ê–£–ù–®–í–ï–ô–ì–°–ö–ò–ô"',
      description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –Ω–µ–º–µ—Ü–∫–∏–π —Ç–æ—Ä—Ç —Å –æ—Ä–µ—Ö–∞–º–∏',
      price: '899.00 ‚ÇΩ',
      weight: '1.2 –∫–≥',
      category: 'classic',
      url: 'https://fabrikatortov.com/o/5c4a74/',
      image: 'ü•ú'
    },
    {
      id: 12,
      name: '–¢–æ—Ä—Ç "–¢–í–û–†–û–ñ–ù–´–ô"',
      description: '–ù–µ–∂–Ω—ã–π —Ç–≤–æ—Ä–æ–∂–Ω—ã–π —Ç–æ—Ä—Ç —Å —è–≥–æ–¥–∞–º–∏',
      price: '699.00 ‚ÇΩ',
      weight: '1.0 –∫–≥',
      category: 'classic',
      url: 'https://fabrikatortov.com/o/5c4a4a/',
      image: 'üßÄ'
    },
    {
      id: 13,
      name: '–¢–æ—Ä—Ç "–î–ï–ù–¨ –ò –ù–û–ß–¨ –ë–û–õ–¨–®–û–ô"',
      description: '–ë–æ–ª—å—à–æ–π —à–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ç–æ—Ä—Ç –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏',
      price: '1299.00 ‚ÇΩ',
      weight: '1.8 –∫–≥',
      category: 'chocolate',
      url: 'https://fabrikatortov.com/o/99184e/',
      image: 'üåô'
    },
    {
      id: 14,
      name: '–¢–æ—Ä—Ç "–≠–ö–°–ü–ï–†–ò–ú–ï–ù–¢"',
      description: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–æ—Ä—Ç —Å –Ω–µ–æ–±—ã—á–Ω—ã–º–∏ –≤–∫—É—Å–∞–º–∏',
      price: '1199.00 ‚ÇΩ',
      weight: '1.3 –∫–≥',
      category: 'classic',
      url: 'https://fabrikatortov.com/o/55de16/',
      image: 'üß™'
    },
    {
      id: 15,
      name: '–¢–æ—Ä—Ç "–ü–õ–û–ú–ë–ò–†"',
      description: '–ú–æ—Ä–æ–∂–µ–Ω–æ–µ –≤ –≤–∏–¥–µ —Ç–æ—Ä—Ç–∞',
      price: '799.00 ‚ÇΩ',
      weight: '1.0 –∫–≥',
      category: 'classic',
      url: 'https://fabrikatortov.com/o/5c4a20/',
      image: 'üç¶'
    }
  ];

  const filteredCakes = selectedCategory === 'all' 
    ? cakes 
    : cakes.filter(cake => cake.category === selectedCategory);

  const handleCakeClick = (url) => {
    window.open(url, '_blank');
  };

  const startConsultation = () => {
    setChatActive(true);
    setMessages([
      {
        type: 'bot',
        text: '–ü—Ä–∏–≤–µ—Ç! üëã –Ø —Ä–æ–±–æ—Ç-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –§–∞–±—Ä–∏–∫–∏ —Ç–æ—Ä—Ç–æ–≤. –ü–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π —Ç–æ—Ä—Ç –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞!'
      },
      {
        type: 'bot',
        text: questions[0].text,
        options: questions[0].options
      }
    ]);
    setCurrentQuestionIndex(0);
    setUserAnswers({});
  };

  const handleOptionClick = (option) => {
    // –ï—Å–ª–∏ —É–∂–µ –≤—ã–±—Ä–∞–Ω –≤–∞—Ä–∏–∞–Ω—Ç, –±–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –Ω–∞–∂–∞—Ç–∏—è
    if (selectedOption !== null) {
      return;
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
    setSelectedOption(option);

    const currentQuestion = questions[currentQuestionIndex];
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    setUserAnswers(prev => ({
      ...prev,
      [currentQuestion.id]: option
    }));

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    setMessages(prev => [...prev, { type: 'user', text: option }]);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã
    if (currentQuestionIndex < questions.length - 1) {
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
      setTimeout(() => {
        const nextQuestion = questions[currentQuestionIndex + 1];
        const botResponse = {
          type: 'bot',
          text: nextQuestion.text,
          options: nextQuestion.options
        };
        setMessages(prev => [...prev, botResponse]);
        setCurrentQuestionIndex(prev => prev + 1);
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
        setSelectedOption(null);
      }, 1000);
    } else {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
      setTimeout(() => {
        const recommendations = generateRecommendations();
        const botResponse = {
          type: 'bot',
          text: `–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã! üéØ –Ø –ø–æ–¥–æ–±—Ä–∞–ª –¥–ª—è –≤–∞—Å –∏–¥–µ–∞–ª—å–Ω—ã–µ —Ç–æ—Ä—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π:`,
          recommendations: recommendations
        };
        setMessages(prev => [...prev, botResponse]);
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
        setSelectedOption(null);
      }, 1000);
    }
  };

  const generateRecommendations = () => {
    let filteredCakes = [...cakes];

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –±—é–¥–∂–µ—Ç—É
    if (userAnswers.budget) {
      const budgetMap = {
        '–î–æ 1000 ‚ÇΩ': price => parseInt(price.match(/\d+/)[0]) <= 1000,
        '–û—Ç 1000 ‚ÇΩ': price => parseInt(price.match(/\d+/)[0]) > 1000
      };
      const budgetFilter = budgetMap[userAnswers.budget];
      if (budgetFilter) {
        filteredCakes = filteredCakes.filter(cake => budgetFilter(cake.price));
      }
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–∞–∑–º–µ—Ä—É (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω)
    if (userAnswers.size) {
      const sizeMap = {
        '–ú–∞–ª–µ–Ω—å–∫–∏–π (–¥–æ 1 –∫–≥)': weight => parseFloat(weight.match(/\d+\.?\d*/)[0]) <= 1.0,
        '–°—Ä–µ–¥–Ω–∏–π (1-1.5 –∫–≥)': weight => {
          const w = parseFloat(weight.match(/\d+\.?\d*/)[0]);
          return w >= 1.0 && w <= 1.5;
        },
        '–ë–æ–ª—å—à–æ–π (–æ—Ç 1.5 –∫–≥)': weight => parseFloat(weight.match(/\d+\.?\d*/)[0]) >= 1.5
      };
      const sizeFilter = sizeMap[userAnswers.size];
      if (sizeFilter) {
        const sizeCakes = filteredCakes.filter(cake => sizeFilter(cake.weight));
        // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ—Ä—Ç—ã –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
        if (sizeCakes.length > 0) {
          filteredCakes = sizeCakes;
        }
        // –ï—Å–ª–∏ –Ω–µ—Ç, –æ—Å—Ç–∞–≤–ª—è–µ–º –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ –±—é–¥–∂–µ—Ç—É
      }
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å–ª—É—á–∞—é (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω)
    if (userAnswers.occasion) {
      const occasionMap = {
        'üéâ –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è': cake => cake.category === 'chocolate' || cake.category === 'mousse', // –Ø—Ä–∫–∏–µ –∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ
        'üéä –Æ–±–∏–ª–µ–π': cake => cake.category === 'classic' || cake.category === 'chocolate', // –°–æ–ª–∏–¥–Ω—ã–µ –∏ –∫—Ä–∞—Å–∏–≤—ã–µ
        'üíï –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —É–∂–∏–Ω': cake => cake.category === 'fruit' || cake.category === 'mousse', // –ù–µ–∂–Ω—ã–µ –∏ —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã–µ
        'üëî –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤': cake => cake.category === 'classic' || cake.category === 'cheesecake', // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ
        'üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–µ–º–µ–π–Ω—ã–π –ø—Ä–∞–∑–¥–Ω–∏–∫': cake => cake.category === 'classic' || cake.category === 'fruit', // –î–ª—è –≤—Å–µ—Ö
        '‚òï –ß–∞–µ–ø–∏—Ç–∏–µ': cake => cake.category === 'honey' || cake.category === 'classic' // –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ
      };
      const occasionFilter = occasionMap[userAnswers.occasion];
      if (occasionFilter) {
        const occasionCakes = filteredCakes.filter(occasionFilter);
        // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ—Ä—Ç—ã –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è —Å–ª—É—á–∞—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
        if (occasionCakes.length > 0) {
          filteredCakes = occasionCakes;
        }
        // –ï—Å–ª–∏ –Ω–µ—Ç, –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
      }
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —É—Ä–æ–≤–Ω—é —Å–ª–∞–¥–æ—Å—Ç–∏ (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω)
    if (userAnswers.sweetness) {
      const sweetnessMap = {
        '–ù–µ –æ—á–µ–Ω—å —Å–ª–∞–¥–∫–∏–π': cake => cake.category === 'cheesecake' || cake.category === 'mousse', // –ú–µ–Ω–µ–µ —Å–ª–∞–¥–∫–∏–µ
        '–£–º–µ—Ä–µ–Ω–Ω–æ —Å–ª–∞–¥–∫–∏–π': cake => cake.category === 'fruit' || cake.category === 'classic', // –°—Ä–µ–¥–Ω—è—è —Å–ª–∞–¥–æ—Å—Ç—å
        '–û—á–µ–Ω—å —Å–ª–∞–¥–∫–∏–π': cake => cake.category === 'chocolate' || cake.category === 'honey' // –û—á–µ–Ω—å —Å–ª–∞–¥–∫–∏–µ
      };
      const sweetnessFilter = sweetnessMap[userAnswers.sweetness];
      if (sweetnessFilter) {
        const sweetnessCakes = filteredCakes.filter(sweetnessFilter);
        // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ—Ä—Ç—ã –ø–æ–¥—Ö–æ–¥—è—â–µ–π —Å–ª–∞–¥–æ—Å—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
        if (sweetnessCakes.length > 0) {
          filteredCakes = sweetnessCakes;
        }
        // –ï—Å–ª–∏ –Ω–µ—Ç, –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
      }
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º
    if (userAnswers.preference) {
      const preferenceMap = {
        '–®–æ–∫–æ–ª–∞–¥': cake => cake.category === 'chocolate',
        '–ú–µ–¥': cake => cake.category === 'honey',
        '–ö—Ä–µ–º': cake => cake.category === 'classic' || cake.category === 'fruit', // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—Ä—É–∫—Ç–æ–≤—ã–µ –∫ –∫—Ä–µ–º—É
        '–ú—É—Å—Å': cake => cake.category === 'mousse'
      };
      const preferenceFilter = preferenceMap[userAnswers.preference];
      if (preferenceFilter) {
        const preferenceCakes = filteredCakes.filter(preferenceFilter);
        // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ—Ä—Ç—ã –ø–æ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
        if (preferenceCakes.length > 0) {
          filteredCakes = preferenceCakes;
        }
        // –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ—Ä—Ç–æ–≤ –ø–æ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º, –æ—Å—Ç–∞–≤–ª—è–µ–º –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ –±—é–¥–∂–µ—Ç—É
      }
    }

    // –ï—Å–ª–∏ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ—Ä—Ç–æ–≤ –º–∞–ª–æ, –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤ —Ä–∞–º–∫–∞—Ö –±—é–¥–∂–µ—Ç–∞
    if (filteredCakes.length < 3) {
      const budgetFilter = userAnswers.budget ? {
        '–î–æ 1000 ‚ÇΩ': price => parseInt(price.match(/\d+/)[0]) <= 1000,
        '–û—Ç 1000 ‚ÇΩ': price => parseInt(price.match(/\d+/)[0]) > 1000
      }[userAnswers.budget] : () => true;

      const popularCakes = cakes.filter(cake => 
        cake.popular && 
        !filteredCakes.find(fc => fc.id === cake.id) &&
        budgetFilter(cake.price)
      );
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—Ä—Ç–æ–≤ –¥–æ 3
      const neededCount = 3 - filteredCakes.length;
      filteredCakes = [...filteredCakes, ...popularCakes.slice(0, neededCount)];
    }

    // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –º–∞–ª–æ —Ç–æ—Ä—Ç–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º –ª—é–±—ã–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ –±—é–¥–∂–µ—Ç—É
    if (filteredCakes.length < 3) {
      const budgetFilter = userAnswers.budget ? {
        '–î–æ 1000 ‚ÇΩ': price => parseInt(price.match(/\d+/)[0]) <= 1000,
        '–û—Ç 1000 ‚ÇΩ': price => parseInt(price.match(/\d+/)[0]) > 1000
      }[userAnswers.budget] : () => true;

      const remainingCakes = cakes.filter(cake => 
        !filteredCakes.find(fc => fc.id === cake.id) &&
        budgetFilter(cake.price)
      );
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—Ä—Ç–æ–≤ –¥–æ 3
      const neededCount = 3 - filteredCakes.length;
      filteredCakes = [...filteredCakes, ...remainingCakes.slice(0, neededCount)];
    }

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º: —Å–Ω–∞—á–∞–ª–∞ –ø–æ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º, –ø–æ—Ç–æ–º –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏, –ø–æ—Ç–æ–º –ø–æ —Ü–µ–Ω–µ
    filteredCakes.sort((a, b) => {
      // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø–æ–ø—É–ª—è—Ä–Ω—ã–º —Ç–æ—Ä—Ç–∞–º
      if (a.popular && !b.popular) return -1;
      if (!a.popular && b.popular) return 1;
      
      // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Ç–æ—Ä—Ç–∞–º —Å —Å–∫–∏–¥–∫–æ–π
      if (a.discount && !b.discount) return -1;
      if (!a.discount && b.discount) return 1;
      
      // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –±–æ–ª–µ–µ –¥–µ—à–µ–≤—ã–º —Ç–æ—Ä—Ç–∞–º
      const priceA = parseInt(a.price.match(/\d+/)[0]);
      const priceB = parseInt(b.price.match(/\d+/)[0]);
      return priceA - priceB;
    });

    return filteredCakes.slice(0, 3);
  };

  const resetChat = () => {
    setChatActive(false);
    setMessages([]);
    setCurrentQuestionIndex(0);
    setUserAnswers({});
    setSelectedOption(null);
  };

  const toggleMobileMenu = () => {
    setMobileMenuOpen(!mobileMenuOpen);
    setMobileFooterOpen(false);
  };

  const closeMobilePanels = () => {
    setMobileMenuOpen(false);
  };

  return (
    <div className="App">
      {/* Mobile Menu Toggle Button */}
      {!chatActive && (
        <button className="mobile-menu-toggle" onClick={toggleMobileMenu}>
          ‚ò∞
        </button>
      )}



      {/* Mobile Overlay */}
      {!chatActive && (
        <div 
          className={`mobile-overlay ${mobileMenuOpen ? 'active' : ''}`}
          onClick={closeMobilePanels}
        />
      )}

      {/* Header - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —á–∞—Ç –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω */}
      {!chatActive && (
        <header className={`header ${mobileMenuOpen ? 'active' : ''}`}>
        <div className="container">
          <div className="header-content">
            <div className="logo">
              <div className="logo-icon">
                <img src={logoImage} alt="–õ–æ–≥–æ—Ç–∏–ø –§–∞–±—Ä–∏–∫–∏ —Ç–æ—Ä—Ç–æ–≤" />
              </div>
              <div className="logo-text">
                <h1>–§–∞–±—Ä–∏–∫–∞ —Ç–æ—Ä—Ç–æ–≤ –æ—Ç –ï–ª–µ–Ω—ã –°—Ç–∞—Ä–∏–∫–æ–≤–æ–π</h1>
                  <p>–°–≤–µ–∂–∏–µ —Ç–æ—Ä—Ç—ã –Ω–∞ –∑–∞–∫–∞–∑</p>
                </div>
              </div>
              
              <nav className="nav">
                <button 
                  className={`nav-btn ${currentView === 'consultant' ? 'active' : ''}`}
                  onClick={() => {
                    setCurrentView('consultant');
                    closeMobilePanels();
                  }}
                >
                  <img src={robotImage} alt="–†–æ–±–æ—Ç" style={{ width: '20px', height: '20px', marginRight: '5px' }} />
                  –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç
                </button>
                <a href="https://fabrikatortov.com" target="_blank" rel="noopener noreferrer" className="nav-btn">
                  üåê –°–∞–π—Ç
                </a>
              </nav>
          </div>
        </div>
      </header>
      )}
      
      {/* –ï—Å–ª–∏ —á–∞—Ç –∞–∫—Ç–∏–≤–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ */}
      {chatActive ? (
        <div className="chat-fullscreen">
        <div className="chat-container">
          <div className="chat-interface">
            <div className="chat-header">
              <div className="bot-avatar">
                <img src={robotImage} alt="–†–æ–±–æ—Ç-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç" />
              </div>
              <div className="bot-info">
                  <h3>–†–æ–±–æ—Ç-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç</h3>
                  <p>–ü–æ–º–æ–≥—É –≤—ã–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π —Ç–æ—Ä—Ç</p>
                </div>
                <button className="close-chat-btn" onClick={resetChat}>
                  ‚úï
                </button>
              </div>
            <div className="chat-messages">
              {messages.map((message, index) => (
                  <div key={index} className={`message ${message.type}`}>
                  <div className="message-avatar">
                      {message.type === 'bot' ? (
                        <img src={robotImage} alt="–†–æ–±–æ—Ç" />
                      ) : 'üë§'}
                  </div>
                  <div className="message-bubble">
                    <p>{message.text}</p>
                    {message.options && (
                      <div className="quick-replies">
                          {message.options.map((option, optionIndex) => (
                          <button
                              key={optionIndex}
                              className={`quick-reply-btn ${selectedOption === option ? 'selected' : ''} ${selectedOption !== null && selectedOption !== option ? 'disabled' : ''}`}
                            onClick={() => handleOptionClick(option)}
                              disabled={selectedOption !== null}
                          >
                            {option}
                          </button>
                        ))}
                      </div>
                    )}
                    {message.recommendations && (
                        <div className="recommendations">
                        <div className="recommendations-header">
                            <h4>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ç–æ—Ä—Ç—ã:</h4>
                          </div>
                          <div className="recommendations-grid">
                            {message.recommendations.map((cake) => (
                              <div key={cake.id} className="recommendation-card">
                                <div className="recommendation-image">
                                  <span className="cake-emoji">{cake.image}</span>
                                </div>
                                <div className="recommendation-content">
                                  <h5 className="recommendation-name">{cake.name}</h5>
                                  <p className="recommendation-description">{cake.description}</p>
                                  <div className="recommendation-details">
                                    <span className="recommendation-weight">{cake.weight}</span>
                                    <span className="recommendation-price">{cake.price}</span>
                                  </div>
                                  <a 
                                    href={cake.url} 
                                    target="_blank" 
                                    rel="noopener noreferrer" 
                                    className="recommendation-link"
                                  >
                                    üõí –ó–∞–∫–∞–∑–∞—Ç—å –Ω–∞ —Å–∞–π—Ç–µ
                                  </a>
                        </div>
                              </div>
                            ))}
                            </div>
                        <div className="recommendations-footer">
                            <p>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –∏ –∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ—Ä—Ç</p>
                            <button className="btn btn-primary btn-small" onClick={resetChat}>
                              üç∞ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ
                            </button>
                        </div>
                      </div>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
        </div>
      ) : (
        <>
          {/* Hero Section */}
          {currentView === 'home' && (
            <section className="hero">
              <div className="container">
                <div className="hero-content">
                  <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –§–∞–±—Ä–∏–∫—É —Ç–æ—Ä—Ç–æ–≤!</h1>
                  <p>–°–æ–∑–¥–∞–µ–º –≤–∫—É—Å–Ω—ã–µ —Ç–æ—Ä—Ç—ã –¥–ª—è –≤–∞—à–∏—Ö –æ—Å–æ–±–µ–Ω–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤</p>
                  <div className="hero-buttons">
                    <button className="btn btn-primary" onClick={() => setCurrentView('consultant')}>
                      ü§ñ –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
                    </button>
                  </div>
                </div>
              </div>
            </section>
          )}

          {/* Catalog */}
          {currentView === 'catalog' && (
            <section className="catalog">
              <div className="container">
                <div className="catalog-header">
                  <h2>–ù–∞—à–∏ —Ç–æ—Ä—Ç—ã</h2>
                  <p>–í—ã–±–µ—Ä–∏—Ç–µ –∏–¥–µ–∞–ª—å–Ω—ã–π —Ç–æ—Ä—Ç –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞</p>
                </div>
                
                <div className="categories">
                  {categories.map((category) => (
                    <button
                      key={category.id}
                      className={`category-btn ${selectedCategory === category.id ? 'active' : ''}`}
                      onClick={() => setSelectedCategory(category.id)}
                    >
                      <span className="category-icon">{category.icon}</span>
                      <span className="category-name">{category.name}</span>
                    </button>
                  ))}
                </div>

                <div className="cakes-grid">
                  {filteredCakes.map((cake) => (
                    <div key={cake.id} className="cake-card" onClick={() => handleCakeClick(cake.url)}>
                      {cake.popular && <div className="popular-badge">–ü–æ–ø—É–ª—è—Ä–Ω—ã–π</div>}
                      {cake.discount && <div className="discount-badge">-{cake.discount}%</div>}
                      <div className="cake-image">
                        <div className="cake-emoji">{cake.image}</div>
                      </div>
                      <div className="cake-content">
                        <h3 className="cake-name">{cake.name}</h3>
                        <p className="cake-description">{cake.description}</p>
                        <div className="cake-details">
                          <span className="cake-weight">{cake.weight}</span>
                          <div className="cake-price-container">
                            {cake.oldPrice && <span className="cake-old-price">{cake.oldPrice}</span>}
                            <span className="cake-price">{cake.price}</span>
                          </div>
                        </div>
                        <div className="cake-category">
                          {categories.find(cat => cat.id === cake.category)?.name}
                        </div>
                      </div>
                      <div className="cake-actions">
                        <button className="btn btn-primary btn-small">
                          –ó–∞–∫–∞–∑–∞—Ç—å
                        </button>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </section>
          )}

          {/* Consultant */}
          {currentView === 'consultant' && (
            <div className="consultant-fullscreen">
              <div className="consultant-container">
                <div className="consultant-interface">
                  <div className="consultant-content">
                    <div className="consultant-card">
                      <div className="consultant-avatar-large">
                        <img src={robotImage} alt="–†–æ–±–æ—Ç-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç" />
                      </div>
                      <div className="consultant-info-large">
                        <h3>–£–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫</h3>
                        <p>–ó–∞–¥–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –∏ —è –ø–æ–¥–±–µ—Ä—É –¥–ª—è –≤–∞—Å –∏–¥–µ–∞–ª—å–Ω—ã–π —Ç–æ—Ä—Ç</p>
                      </div>
                      <button className="btn btn-primary" onClick={startConsultation}>
                        üöÄ –ù–∞—á–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
                      </button>
                    </div>

                    <div className="consultant-features">
                      <div className="feature">
                        <span className="feature-icon">üéØ</span>
                        <h4>–¢–æ—á–Ω—ã–π –ø–æ–¥–±–æ—Ä</h4>
                        <p>–£—á–∏—Ç—ã–≤–∞–µ–º –≤—Å–µ –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏ –±—é–¥–∂–µ—Ç</p>
                      </div>
                      <div className="feature">
                        <span className="feature-icon">‚ö°</span>
                        <h4>–ë—ã—Å—Ç—Ä–æ</h4>
                        <p>–ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∑–∞ 2-3 –º–∏–Ω—É—Ç—ã</p>
                      </div>
                      <div className="feature">
                        <span className="feature-icon">üí°</span>
                        <h4>–£–º–Ω—ã–µ —Å–æ–≤–µ—Ç—ã</h4>
                        <p>–ü–æ–º–æ–∂–µ–º —Å –≤—ã–±–æ—Ä–æ–º —Ä–∞–∑–º–µ—Ä–∞ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è</p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}


        </>
      )}
    </div>
  );
}

export default App;
